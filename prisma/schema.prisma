// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Variant {
    STANDARD
    JACK
    SPADES
}

enum TableState {
    OPEN
    PLAYING
    DONE
}

model GameTable {
    id      String     @id @default(cuid())
    players Json       @default("{}") @db.JsonB
    variant Variant    @default(STANDARD)
    state   TableState @default(OPEN)
    Round   Round[]
    owner   AuthUser   @relation(fields: [ownerId], references: [id])
    ownerId String
}

enum RoundState {
    BIDDING
    PLAYING
    DONE
}

model Round {
    tableId    String
    table      GameTable  @relation(fields: [tableId], references: [id])
    round      Int        @default(autoincrement())
    dealIndex  BigInt
    passOffset Int        @default(0)
    state      RoundState @default(BIDDING)
    bids       Json       @default("{}") @db.JsonB
    plays      Json       @default("[]") @db.JsonB
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt

    @@unique([tableId, round])
}

model AuthUser {
    id           String        @id @unique
    name         String
    username     String        @unique
    auth_session AuthSession[]
    auth_key     AuthKey[]
    GameTable    GameTable[]

    @@map("auth_user")
}

model AuthSession {
    id             String   @id @unique
    user_id        String
    active_expires BigInt
    idle_expires   BigInt
    auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
    @@map("auth_session")
}

model AuthKey {
    id              String   @id @unique
    hashed_password String?
    user_id         String
    primary_key     Boolean
    expires         BigInt?
    auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
    @@map("auth_key")
}
